@model Aluno.Entity.Professor



@using (Html.BeginForm())
{


    <fieldset>
        <legend>Professor</legend>

        @Html.HiddenFor(model => model.idProfessor)

        <div class="editor-label">
            @Html.LabelFor(model => model.Nome)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nome)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Graduacao)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Graduacao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Especializacao)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Especializacao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Materia)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Materia)
        </div>

        <p>
            <input type="submit" value="Salvar" onclick="return validar();" />
            <input type="button" value="Cancelar" onclick="cancelar();" />
        </p>
    </fieldset>
}

<script>

    function cancelar() {
        carregarTabela('');
    }

    function validar() {

        if ($("#Nome").val() == "") {
            alert("Atenção o nome é obrigatório!");
            return false;
        }
        if ($("#Graduacao").val() == "") {
            alert("Atenção, a Graduação é obrigatória!");
            return false;
        }
        if ($("#Especializacao").val() == "") {
            alert("Atenção, a Especializacao é obrigatória!");
            return false;
        }
        if ($("#Materia").val() == "") {
            alert("Atenção, a Materia é obrigatória!");
            return false;
        }


        return true;
    }

</script>